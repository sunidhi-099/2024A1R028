//Lab exp 11                   16/4
#include<stdio.h>
#include<stdlib.h>
struct Node{
    int data;
    struct Node *next;
};
struct Node* front = NULL, *rear = NULL;
void enqueue(int value){
    struct Node *temp = (struct Node*)malloc(sizeof(struct Node));
    if(temp==NULL)
        printf("Queue overflow!!\n");
    else{
        temp->data = value;
        temp->next = NULL;
        if(rear==NULL)
            front = rear = temp;
        else{
            rear->next = temp;
            rear=temp;
        }
        printf("%d inserted in queue\n",value);
    }
}

int dequeue(){
    if(front == NULL){
        printf("Queue underflow!!\n");
        return -1;
    }
    else{
        struct Node* temp = front;
        front = front->next;
        if(front==NULL){
             rear=NULL;
        }
        int val = temp->data;
        free(temp);
        return val;
    }
}

int peek(){
    if(front == NULL){
        printf("Queue is empty!!\n");
        return -1;
    }
    else
        return front->data;
}

void show(){
    if(front==NULL)
        printf("Queue is empty!!\n");
    else{
        printf("queue elements are: \n");
        struct Node* temp = front;
        while(temp != NULL){
            printf("%d ",temp->data);
            temp=temp->next;
        }
    }
}
int main(){
    while(1){
        printf("1. Enqueue\n");
        printf("2. Dequeue\n");
        printf("3. Peek\n");
        printf("4. Display\n");
        printf("5. Exit\n");
        int choice,val,res;
        printf("Enter choice: ");
        scanf("%d",&choice);
        switch(choice){
            case 1:
                printf("Enter value: ");
                scanf("%d",&val);
                enqueue(val);
                break;
            case 2:
                res = dequeue();
                if(res != -1)
                    printf("%d dequeue from the queue\n",res);
                break;
            case 3:
                res = peek();
                if(res != -1)
                    printf("Top element is %d\n",res);
                break;
            case 4:
                show();
                break;
            case 5:
                exit(0);
                break;
            default:
                printf("<Invalid choice>");
        }
        printf("\n");
    }
    return 0;
}
